// <auto-generated />
using System;
using AutoRentRevive.API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoRentRevive.API.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20250502141248_InitialCreate_2")]
    partial class InitialCreate_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoRentRevive.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("Department_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            Department_Code = "IT",
                            Department_Name = "Information Technology",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 2,
                            Department_Code = "HR",
                            Department_Name = "Human Resource",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 3,
                            Department_Code = "FIN",
                            Department_Name = "Finance",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 4,
                            Department_Code = "MKT",
                            Department_Name = "Marketing",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 5,
                            Department_Code = "ADM",
                            Department_Name = "Admin",
                            IsActive = true
                        },
                        new
                        {
                            DepartmentId = 6,
                            Department_Code = "PRL",
                            Department_Name = "Payroll",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("AutoRentRevive.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            CreatedTime = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            DateofBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 1,
                            Email = "johnDoe@gmail.com",
                            FirstName = "John",
                            Gender = 0,
                            IsActive = true,
                            LastName = "Doe"
                        },
                        new
                        {
                            EmployeeId = 2,
                            CreatedTime = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            DateofBirth = new DateTime(1985, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "janeSmith@gmail.com",
                            FirstName = "Jane",
                            Gender = 1,
                            IsActive = true,
                            LastName = "Smith"
                        },
                        new
                        {
                            EmployeeId = 3,
                            CreatedTime = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            DateofBirth = new DateTime(1992, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 3,
                            Email = "michaelBrown@gmail.com",
                            FirstName = "Michael",
                            Gender = 0,
                            IsActive = true,
                            LastName = "Brown"
                        },
                        new
                        {
                            EmployeeId = 4,
                            CreatedTime = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            DateofBirth = new DateTime(1995, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 4,
                            Email = "emilyDavis@gmail.com",
                            FirstName = "Emily",
                            Gender = 1,
                            IsActive = true,
                            LastName = "Davis"
                        },
                        new
                        {
                            EmployeeId = 6,
                            CreatedTime = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            DateofBirth = new DateTime(1995, 12, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DepartmentId = 2,
                            Email = "saraparker@gmail.com",
                            FirstName = "Sara",
                            Gender = 1,
                            IsActive = true,
                            LastName = "parker"
                        });
                });

            modelBuilder.Entity("AutoRentRevive.Models.Employee", b =>
                {
                    b.HasOne("AutoRentRevive.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
